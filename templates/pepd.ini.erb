#
# file managed by puppet, do not edit manually
#
#
# Argus PEP Server configuration
#
# Documentation: https://twiki.cern.ch/twiki/bin/view/EGEE/AuthZPEPDConfig
# 
[SERVICE]
entityId  = http://<%= scope['argus::service_name']%>/pepd
hostname  = <%= @fqdn %>
port      = <%= scope['argus::pepd_port']%>
adminPort = <%= scope['argus::pepd_admin_port']%>
adminPassword = <%= scope['argus::secret_pass'] rescue scope['argus::pepd_pass']%>

pips = REQVALIDATOR_PIP OPENSSLSUBJECT_PIP GLITEXACMLPROFILE_PIP COMMONXACMLPROFILE_PIP
obligationHandlers = ACCOUNTMAPPER_OH

[PDP]
pdps = https://<%= scope['argus::pdp_server'] -%>:<%= scope['argus::pdps_port']%>/authz
maximumCachedResponses = 0 

[SECURITY]
servicePrivateKey = /etc/grid-security/hostkey.pem
serviceCertificate = /etc/grid-security/hostcert.pem
trustInfoDir = /etc/grid-security/certificates/
enableSSL = true
requireClientCertAuthentication = true
# was : fixme : temporarily for WMS
# requireClientCertAuthentication = false 

#
# Policy Information Points (PIP) configuration
#
[REQVALIDATOR_PIP]
parserClass = org.glite.authz.pep.pip.provider.RequestValidatorPIPIniConfigurationParser
validateRequestSubjects = true
validateRequestResources = true
validateRequestAction = true
validateRequestEnvironment = false

[OPENSSLSUBJECT_PIP]
parserClass = org.glite.authz.pep.pip.provider.OpenSSLSubjectPIPIniConfigurationParser
opensslSubjectAttributeIDs = http://glite.org/xacml/attribute/subject-issuer urn:oasis:names:tc:xacml:1.0:subject:subject-id
opensslSubjectAttributeDatatypes = http://www.w3.org/2001/XMLSchema#string

[GLITEXACMLPROFILE_PIP]
parserClass = org.glite.authz.pep.pip.provider.GLiteAuthorizationProfilePIPIniConfigurationParser
vomsInfoDir = /etc/grid-security/vomsdir/
acceptedProfileIDs = http://glite.org/xacml/profile/grid-ce/1.0 http://glite.org/xacml/profile/grid-wn/1.0

[COMMONXACMLPROFILE_PIP]
parserClass = org.glite.authz.pep.pip.provider.CommonXACMLAuthorizationProfilePIPIniConfigurationParser
vomsInfoDir = /etc/grid-security/vomsdir/
acceptedProfileIDs = http://dci-sec.org/xacml/profile/common-authz/1.1 

#
# Obligation Handlers (OH) configuration
#
[ACCOUNTMAPPER_OH]
parserClass = org.glite.authz.pep.obligation.dfpmap.DFPMObligationHandlerConfigurationParser
handledObligationId = http://glite.org/xacml/obligation/local-environment-map
accountMapFile = <%= scope['argus::grid_mapfile']%>
groupMapFile = <%= scope['argus::group_mapfile']%>
gridMapDir = <%= scope['argus::grid_mapdir']%>
useSecondaryGroupNamesForMapping = true

